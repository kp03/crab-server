version: '3.4'

services:
  elasticsearch:
    container_name: es-container-vi
    image: thaichihien/elasticsearch-analysis-vietnamese:8.7.0
    restart: on-failure
    ports:
      - "9200:9200"
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
      memlock:
        hard: -1
        soft: -1
    environment:
      ES_JAVA_OPTS: "-Xmx2g -Xms2g"
      ELASTIC_USERNAME: "elastic"
      ELASTIC_PASSWORD: "changeme"
      bootstrap.memory_lock: "true"
      discovery.type: "single-node"
      xpack.security.enabled: "false"
    volumes:
      - ./esdata:/usr/share/elasticsearch/data
    networks:
      - mirco
  rabbitmq:
    container_name: rabbit-container
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - mirco
  redis:
    container_name: cache
    image: redis
    ports:
      - 6379:6379
    volumes:
      - redis:/data
    networks:
      - mirco
  db:
    image: postgres:14.1-alpine
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - '5433:5432'
    networks:
      - mirco
    volumes: 
      - db:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/create_tables.sql
  reception:
    container_name: reception-service
    build: 
      context: ./reception-service
      dockerfile: Dockerfile
    env_file:
      - ./reception-service/.env
    environment:
      - ELASTIC_URL=http://elasticsearch:9200
      - RABBITMQ_HOST=rabbitmq:5672
    ports:
      - 3001:3001
    depends_on:
      - elasticsearch
      - rabbitmq
    networks:
      - mirco
  location:
    container_name: location-service
    build: 
      context: ./location-service
      dockerfile: Dockerfile
    env_file:
      - ./location-service/.env
    environment:
      - REDIS_HOST=redis
      - RABBITMQ_HOST=rabbitmq:5672
    depends_on:
      - redis
      - rabbitmq
    networks:
      - mirco
  primary:
    container_name: primary-server
    build: 
      context: ./server
      dockerfile: Dockerfile
    env_file:
      - ./server/.env
    environment:
      - PORT=5432
      - DB_NAME=crabDB
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - RABBITMQ_HOST=rabbitmq:5672
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/crabDB
    depends_on:
      - db
      - rabbitmq
    ports:
      - 4000:4000
    networks:
      - mirco
  call-center:
    container_name: call-center
    build: 
      context: ./react-call-center
      dockerfile: Dockerfile
    env_file:
      - ./react-call-center/.env
    environment:
      - VITE_SERVER_HOST=reception
      - VITE_SERVER_PORT=3001
    depends_on:
      - reception
    ports:
      - 5000:80
    networks:
      - mirco
  admin:
    container_name: admin
    build: 
      context: ./react-admin
      dockerfile: Dockerfile
    env_file:
      - ./react-admin/.env
    environment:
      - REACT_APP_SERVER_HOST=primary
      - REACT_APP_SERVER_PORT=4000
    depends_on:
      - primary
    ports:
      - 5001:80
    networks:
      - mirco
  

networks:
  mirco:
    driver: bridge

volumes:
  esdata:
  db:
    driver: local
  redis:
    driver: local